networks:
  default:
    name: safe_shared_network
    external: true

volumes:
  nginx-shared-txs:
  nginx-shared-cfg:
  nginx-shared-cfg-media:

x-healthcheck-celery-template: &celeryhealthcheck
  healthcheck:
    test: ["CMD", "celery", "inspect", "ping"]
    interval: 30s
    timeout: 30s
    retries: 3

x-healthcheck-db-template: &pghealthcheck
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U postgres"]
    interval: 30s
    timeout: 30s
    retries: 3

x-healthcheck-redis-template: &redishealthcheck
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    interval: 30s
    timeout: 30s
    retries: 3

services:
  # Common nginx and database
  nginx:
    image: nginx:alpine
    ports:
      - "${REVERSE_PROXY_PORT}:8000"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared-txs:/nginx-txs
      - nginx-shared-cfg:/nginx-cfg
      - nginx-shared-cfg-media:/nginx-cfg-media
    depends_on:
      - txs-web
      - cfg-web
      - cgw-web
      - events-web

  cfg-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/cfg-db:/var/lib/postgresql/data
    ports:
      - "35432:5432"
    <<: *pghealthcheck

  events-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/events-db:/var/lib/postgresql/data
    ports:
      - "45432:5432"
    <<: *pghealthcheck

  # Safe Config Service
  cfg-web:
    user: root
    image: safeglobal/safe-config-service:${CFG_VERSION}
    tty: true
    volumes:
      - nginx-shared-cfg:/nginx
      - nginx-shared-cfg-media:/app/src/media
    env_file:
      - container_env_files/cfg.env
    environment:
      - SECRET_KEY=${CFG_SECRET_KEY}
      - CGW_FLUSH_TOKEN=${CFG_CGW_FLUSH_TOKEN}
      - MEDIA_URL=${CFG_MEDIA_URL}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
    depends_on:
      cfg-db:
        condition: service_healthy

  # Safe Client Gateway
  cgw-redis:
    image: redis:alpine
    <<: *redishealthcheck
    ports:
      - "36379:6379"

  cgw-web:
    image: safeglobal/safe-client-gateway-nest:${CGW_VERSION}
    env_file:
      - container_env_files/cgw.env
    environment:
      - AUTH_TOKEN=${CGW_AUTH_TOKEN}
    depends_on:
      cgw-redis:
        condition: service_healthy
  ui:
    image: shelchin2023/safe-wallet-web:${UI_VERSION}
    env_file:
      - container_env_files/ui.env
    environment:
      - NEXT_PUBLIC_INFURA_TOKEN=${NEXT_PUBLIC_INFURA_TOKEN}
      - NEXT_PUBLIC_GATEWAY_URL_PRODUCTION=${NEXT_PUBLIC_GATEWAY_URL_PRODUCTION}
      - NEXT_PUBLIC_SAFE_APPS_INFURA_TOKEN=${NEXT_PUBLIC_SAFE_APPS_INFURA_TOKEN}
      - NEXT_PUBLIC_SAFE_VERSION=${NEXT_PUBLIC_SAFE_VERSION_130}
      - NEXT_PUBLIC_WC_PROJECT_ID=${NEXT_PUBLIC_WC_PROJECT_ID}
    depends_on:
      - nginx
    expose:
      - 8080
  ui141:
    image: shelchin2023/safe-wallet-web:${UI_VERSION}
    env_file:
      - container_env_files/ui.env
    environment:
      - NEXT_PUBLIC_INFURA_TOKEN=${NEXT_PUBLIC_INFURA_TOKEN}
      - NEXT_PUBLIC_GATEWAY_URL_PRODUCTION=${NEXT_PUBLIC_GATEWAY_URL_PRODUCTION}
      - NEXT_PUBLIC_SAFE_APPS_INFURA_TOKEN=${NEXT_PUBLIC_SAFE_APPS_INFURA_TOKEN}
      - NEXT_PUBLIC_SAFE_VERSION=${NEXT_PUBLIC_SAFE_VERSION_141}
      - NEXT_PUBLIC_WC_PROJECT_ID=${NEXT_PUBLIC_WC_PROJECT_ID}
    depends_on:
      - nginx
    expose:
      - 8080
    ports:
      - "8080:8080"

  general-rabbitmq:
    image: rabbitmq:alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 30s
      retries: 3
      start_period: 15s

  events-web:
    image: safeglobal/safe-events-service:${EVENTS_VERSION}
    env_file:
      - container_env_files/events.env
    depends_on:
      events-db:
        condition: service_healthy
      general-rabbitmq:
        condition: service_healthy
